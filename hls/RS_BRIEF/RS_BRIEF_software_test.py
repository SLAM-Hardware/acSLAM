import cv2
import matplotlib.pyplot as plt
import numpy as np
import math
pattern = [
2,5, -8,6,
-5,-10, 0,6,
6,-2, 3,-1,
-1,6, 1,5,
2,-3, 3,-1,
-6,1, 0,-3,
1,-4, 9,-8,
-8,5, -4,-3,
1,5, -9,4,
-3,-11, -1,6,
6,-1, 3,0,
-2,6, 0,5,
3,-3, 3,0,
-6,0, 1,-3,
2,-4, 10,-6,
-9,3, -3,-4,
0,5, -10,2,
-1,-11, -2,6,
6,0, 3,0,
-3,5, -1,5,
3,-2, 3,0,
-6,-1, 1,-3,
2,-3, 11,-4,
-9,2, -3,-4,
-1,5, -10,1,
1,-11, -3,5,
6,2, 3,1,
-4,4, -2,5,
3,-1, 3,1,
-6,-3, 2,-2,
3,-3, 12,-2,
-9,0, -2,-5,
-2,5, -10,-1,
4,-11, -4,4,
6,3, 3,1,
-5,4, -3,4,
4,-1, 3,1,
-5,-4, 2,-2,
4,-2, 12,1,
-9,-2, -1,-5,
-3,4, -9,-3,
6,-10, -5,3,
5,4, 2,2,
-6,3, -4,4,
4,0, 2,2,
-4,-4, 2,-2,
4,-1, 12,3,
-9,-4, 0,-5,
-4,4, -9,-5,
7,-8, -6,2,
4,5, 2,2,
-6,1, -4,3,
4,1, 2,2,
-3,-5, 3,-1,
4,-1, 11,5,
-8,-5, 1,-5,
-5,3, -7,-7,
9,-7, -6,1,
3,5, 2,3,
-6,0, -5,2,
3,1, 2,3,
-2,-6, 3,-1,
4,0, 10,7,
-6,-7, 2,-5,
-5,2, -6,-8,
10,-5, -6,0,
2,6, 1,3,
-6,-1, -5,1,
3,2, 1,3,
-1,-6, 3,0,
4,1, 8,9,
-5,-8, 3,-4,
-5,1, -4,-9,
11,-3, -6,-1,
1,6, 0,3,
-6,-2, -5,0,
3,3, 0,3,
0,-6, 3,1,
4,2, 6,10,
-3,-9, 4,-3,
-5,0, -2,-10,
11,-1, -6,-2,
0,6, 0,3,
-5,-3, -5,-1,
2,3, 0,3,
1,-6, 3,1,
3,2, 4,11,
-2,-9, 4,-3,
-5,-1, -1,-10,
11,1, -5,-3,
-2,6, -1,3,
-4,-4, -5,-2,
1,3, -1,3,
3,-6, 2,2,
3,3, 2,12,
0,-9, 5,-2,
-5,-2, 1,-10,
11,4, -4,-4,
-3,6, -1,3,
-4,-5, -4,-3,
1,4, -1,3,
4,-5, 2,2,
2,4, -1,12,
2,-9, 5,-1,
-4,-3, 3,-9,
10,6, -3,-5,
-4,5, -2,2,
-3,-6, -4,-4,
0,4, -2,2,
4,-4, 2,2,
1,4, -3,12,
4,-9, 5,0,
-4,-4, 5,-9,
8,7, -2,-6,
-5,4, -2,2,
-1,-6, -3,-4,
-1,4, -2,2,
5,-3, 1,3,
1,4, -5,11,
5,-8, 5,1,
-3,-5, 7,-7,
7,9, -1,-6,
-5,3, -3,2,
0,-6, -2,-5,
-1,3, -3,2,
6,-2, 1,3,
0,4, -7,10,
7,-6, 5,2,
-2,-5, 8,-6,
5,10, 0,-6,
-6,2, -3,1,
1,-6, -1,-5,
-2,3, -3,1,
6,-1, 0,3,
-1,4, -9,8,
8,-5, 4,3,
-1,-5, 9,-4,
3,11, 1,-6,
-6,1, -3,0,
2,-6, 0,-5,
-3,3, -3,0,
6,0, -1,3,
-2,4, -10,6,
9,-3, 3,4,
0,-5, 10,-2,
1,11, 2,-6,
-6,0, -3,0,
3,-5, 1,-5,
-3,2, -3,0,
6,1, -1,3,
-2,3, -11,4,
9,-2, 3,4,
1,-5, 10,-1,
-1,11, 3,-5,
-6,-2, -3,-1,
4,-4, 2,-5,
-3,1, -3,-1,
6,3, -2,2,
-3,3, -12,2,
9,0, 2,5,
2,-5, 10,1,
-4,11, 4,-4,
-6,-3, -3,-1,
5,-4, 3,-4,
-4,1, -3,-1,
5,4, -2,2,
-4,2, -12,-1,
9,2, 1,5,
3,-4, 9,3,
-6,10, 5,-3,
-5,-4, -2,-2,
6,-3, 4,-4,
-4,0, -2,-2,
4,4, -2,2,
-4,1, -12,-3,
9,4, 0,5,
4,-4, 9,5,
-7,8, 6,-2,
-4,-5, -2,-2,
6,-1, 4,-3,
-4,-1, -2,-2,
3,5, -3,1,
-4,1, -11,-5,
8,5, -1,5,
5,-3, 7,7,
-9,7, 6,-1,
-3,-5, -2,-3,
6,0, 5,-2,
-3,-1, -2,-3,
2,6, -3,1,
-4,0, -10,-7,
6,7, -2,5,
5,-2, 6,8,
-10,5, 6,0,
-2,-6, -1,-3,
6,1, 5,-1,
-3,-2, -1,-3,
1,6, -3,0,
-4,-1, -8,-9,
5,8, -3,4,
5,-1, 4,9,
-11,3, 6,1,
-1,-6, 0,-3,
6,2, 5,0,
-3,-3, 0,-3,
0,6, -3,-1,
-4,-2, -6,-10,
3,9, -4,3,
5,0, 2,10,
-11,1, 6,2,
0,-6, 0,-3,
5,3, 5,1,
-2,-3, 0,-3,
-1,6, -3,-1,
-3,-2, -4,-11,
2,9, -4,3,
5,1, 1,10,
-11,-1, 5,3,
2,-6, 1,-3,
4,4, 5,2,
-1,-3, 1,-3,
-3,6, -2,-2,
-3,-3, -2,-12,
0,9, -5,2,
5,2, -1,10,
-11,-4, 4,4,
3,-6, 1,-3,
4,5, 4,3,
-1,-4, 1,-3,
-4,5, -2,-2,
-2,-4, 1,-12,
-2,9, -5,1,
4,3, -3,9,
-10,-6, 3,5,
4,-5, 2,-2,
3,6, 4,4,
0,-4, 2,-2,
-4,4, -2,-2,
-1,-4, 3,-12,
-4,9, -5,0,
4,4, -5,9,
-8,-7, 2,6,
5,-4, 2,-2,
1,6, 3,4,
1,-4, 2,-2,
-5,3, -1,-3,
-1,-4, 5,-11,
-5,8, -5,-1,
3,5, -7,7,
-7,-9, 1,6,
5,-3, 3,-2,
0,6, 2,5,
1,-3, 3,-2,
-6,2, -1,-3,
0,-4, 7,-10,
-7,6, -5,-2]

HALF_PATCH_SIZE = 12
PATCH_SIZE = 25
umax = np.zeros(HALF_PATCH_SIZE + 1)
vmax = math.floor(HALF_PATCH_SIZE * math.sqrt((float)(2))/2+ 1 )
vmin = math.ceil(HALF_PATCH_SIZE * math.sqrt((float)(2)) / 2)
hp2 = HALF_PATCH_SIZE*HALF_PATCH_SIZE
for v in range(0,(int)(vmax)+1):
    umax[int(v)]= round(math.sqrt(hp2 - v*v))
v0 = 0
for v in range(HALF_PATCH_SIZE,int(vmin)-1,-1):
    while (umax[v0] == umax[v0+1]):
        v0 = v0 + 1
    umax[int(v)]=v0
    v0 = v0+1
mask = [[0 for i in range(25)]for j in range(25)]
for i in range(-12,13):
    for j in range(-12,13):
        if (umax[abs(j)]>=abs(i)):
            mask[i+12][j+12] = 255

out_file = open("img_gray.txt","w")
img_ori = cv2.imread('./test_data/'+'000000'+'.png')
img_gray = cv2.cvtColor(img_ori,cv2.COLOR_BGR2GRAY)
x = 12
y = 12
m01 = 0
m10 = 0
buf = [[0 for i in range(25)]for j in range(25)]
for i in range(x-12,x+13):
    for j in range(y-12,y+13):
        buf[i-x+12][j-y+12]=img_gray[i][j]

for i in range(25):
    tmp1 = 0
    tmp2 = 0
    for im in range(25):
        tmp1 = tmp1 + (buf[i][im]&mask[i][im])
        tmp2 = tmp2 + (buf[im][i]&mask[im][i])
    m01 = m01 + tmp1*(i-12)
    m10 = m10 + tmp2*(i-12)
print(m01),
print(m10)

angle = math.atan2(m01,m10)
angle = angle + 3.14159265358
bias = round(angle / 0.1963495408)
print(bias)
if (bias == 32):
    bias = 0
des=np.zeros(256)
for i in range(256):
    tmp = int((i +(32-bias)*8)%256)
    t0 = 12+pattern[i*4]
    t1 = 12+pattern[i*4+1]
    t2 = 12+pattern[i*4+2]
    t3 = 12+pattern[i*4+3]
    des[tmp]=buf[t0][t1]<buf[t2][t3]
for i in range(3,-1,-1):
    for j in range(i*64+63,i*64-1,-1):
        print(int(des[j])),
    print("")
